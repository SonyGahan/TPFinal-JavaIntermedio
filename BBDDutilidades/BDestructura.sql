-- MySQL Script generated by MySQL Workbench
-- Sun Nov 19 13:56:21 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema incidentes
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema incidentes
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `incidentes` DEFAULT CHARACTER SET utf8 ;
USE `incidentes` ;

-- -----------------------------------------------------
-- Table `incidentes`.`Cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `incidentes`.`Cliente` (
  `id_cliente` INT NOT NULL AUTO_INCREMENT,
  `razon_social` VARCHAR(45) NOT NULL,
  `cuit` VARCHAR(10) NOT NULL,
  `mail` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_cliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `incidentes`.`Especialidad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `incidentes`.`Especialidad` (
  `id_especialidad` INT NOT NULL AUTO_INCREMENT,
  `nombre_especialidad` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(100) NULL,
  PRIMARY KEY (`id_especialidad`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `incidentes`.`Incidente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `incidentes`.`Incidente` (
  `id_incidente` INT NOT NULL AUTO_INCREMENT,
  `id_cliente` INT NOT NULL,
  `fecha_reporte` DATETIME NOT NULL,
  PRIMARY KEY (`id_incidente`),
  INDEX `fk_Incidente_Cliente_idx` (`id_cliente` ASC) VISIBLE,
  CONSTRAINT `fk_Incidente_Cliente`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `incidentes`.`Cliente` (`id_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `incidentes`.`Problema`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `incidentes`.`Problema` (
  `id_tecnico` INT NOT NULL,
  `id_incidente` INT NOT NULL,
  `id_tipo_problema` INT NOT NULL,
  `resuelto` TINYINT NOT NULL,
  `fecha_resolucion` DATETIME NULL,
  `observaciones` VARCHAR(255) NULL,
  INDEX `fk_Problema_Tecnico1_idx` (`id_tecnico` ASC) VISIBLE,
  INDEX `fk_Problema_Incidente1_idx` (`id_incidente` ASC) VISIBLE,
  INDEX `fk_Problema_TipoProblema1_idx` (`id_tipo_problema` ASC) VISIBLE,
  CONSTRAINT `fk_Problema_Tecnico1`
    FOREIGN KEY (`id_tecnico`)
    REFERENCES `incidentes`.`Tecnico` (`id_tecnico`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Problema_Incidente1`
    FOREIGN KEY (`id_incidente`)
    REFERENCES `incidentes`.`Incidente` (`id_incidente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Problema_TipoProblema1`
    FOREIGN KEY (`id_tipo_problema`)
    REFERENCES `incidentes`.`TipoProblema` (`id_tipo_problema`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `incidentes`.`Servicio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `incidentes`.`Servicio` (
  `id_servicio` INT NOT NULL AUTO_INCREMENT,
  `aplicacion` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(100) NULL,
  PRIMARY KEY (`id_servicio`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `incidentes`.`Servicios_contratados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `incidentes`.`Servicios_contratados` (
  `id_cliente` INT NOT NULL,
  `id_servicio` INT NOT NULL,
  INDEX `fk_Servicios_contratados_Cliente1_idx` (`id_cliente` ASC) VISIBLE,
  INDEX `fk_Servicios_contratados_Servicio1_idx` (`id_servicio` ASC) VISIBLE,
  CONSTRAINT `fk_Servicios_contratados_Cliente1`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `incidentes`.`Cliente` (`id_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Servicios_contratados_Servicio1`
    FOREIGN KEY (`id_servicio`)
    REFERENCES `incidentes`.`Servicio` (`id_servicio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `incidentes`.`Tecnico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `incidentes`.`Tecnico` (
  `id_tecnico` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `mail` VARCHAR(45) NOT NULL,
  `celular` VARCHAR(15) NOT NULL,
  `prefieremail` TINYINT NULL,
  PRIMARY KEY (`id_tecnico`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `incidentes`.`Tecnico_con_Especialidad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `incidentes`.`Tecnico_con_Especialidad` (
  `Tecnico_id_tecnico` INT NOT NULL,
  `id_especialidad` INT NOT NULL,
  INDEX `fk_Tecnico_con_Especialidad_Tecnico1_idx` (`Tecnico_id_tecnico` ASC) VISIBLE,
  INDEX `fk_Tecnico_con_Especialidad_Especialidad1_idx` (`id_especialidad` ASC) VISIBLE,
  CONSTRAINT `fk_Tecnico_con_Especialidad_Tecnico1`
    FOREIGN KEY (`Tecnico_id_tecnico`)
    REFERENCES `incidentes`.`Tecnico` (`id_tecnico`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Tecnico_con_Especialidad_Especialidad1`
    FOREIGN KEY (`id_especialidad`)
    REFERENCES `incidentes`.`Especialidad` (`id_especialidad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `incidentes`.`TipoProblema`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `incidentes`.`TipoProblema` (
  `id_tipo_problema` INT NOT NULL AUTO_INCREMENT,
  `id_servicio` INT NOT NULL,
  `problema` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(45) NOT NULL,
  `tiempo_max_resolucion` INT NOT NULL,
  PRIMARY KEY (`id_tipo_problema`),
  INDEX `fk_TipoProblema_Servicio_idx` (`id_servicio` ASC) VISIBLE,
  CONSTRAINT `fk_TipoProblema_Servicio`
    FOREIGN KEY (`id_servicio`)
    REFERENCES `incidentes`.`Servicio` (`id_servicio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `incidentes`.`TipoProblema_Especialidad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `incidentes`.`TipoProblema_Especialidad` (
  `id_especialidad` INT NOT NULL,
  `id_tipo_problema` INT NOT NULL,
  INDEX `fk_Problema_resuelto_por_Especialidad_Especialidad1_idx` (`id_especialidad` ASC) VISIBLE,
  INDEX `fk_Problema_resuelto_por_Especialidad_TipoProblema1_idx` (`id_tipo_problema` ASC) VISIBLE,
  CONSTRAINT `fk_Problema_resuelto_por_Especialidad_Especialidad1`
    FOREIGN KEY (`id_especialidad`)
    REFERENCES `incidentes`.`Especialidad` (`id_especialidad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Problema_resuelto_por_Especialidad_TipoProblema1`
    FOREIGN KEY (`id_tipo_problema`)
    REFERENCES `incidentes`.`TipoProblema` (`id_tipo_problema`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE USER 'john' IDENTIFIED BY 'molina';

GRANT ALL ON `incidentes`.* TO 'john';
GRANT SELECT ON TABLE `incidentes`.* TO 'john';
GRANT SELECT, INSERT, TRIGGER ON TABLE `incidentes`.* TO 'john';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `incidentes`.* TO 'john';
GRANT EXECUTE ON ROUTINE `incidentes`.* TO 'john';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
